{"ast":null,"code":"import _objectSpread from\"D:/REact/01_first/interview/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:/REact/01_first/interview/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/REact/01_first/interview/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/REact/01_first/interview/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/REact/01_first/interview/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import Profile from\"./Profile\";import{connect}from\"react-redux\";import{getStatus,getUserProfile,savePhoto,saveProfile,updateStatus}from\"../../redux/profile-reducer\";import{withRouter}from\"react-router-dom\";import{compose}from\"redux\";import{jsx as _jsx}from\"react/jsx-runtime\";var ProfileContainer=/*#__PURE__*/function(_React$Component){_inherits(ProfileContainer,_React$Component);var _super=_createSuper(ProfileContainer);function ProfileContainer(props){_classCallCheck(this,ProfileContainer);return _super.call(this,props);}_createClass(ProfileContainer,[{key:\"refreshProfile\",value:function refreshProfile(){var userId=+this.props.match.params.userId;if(!userId){userId=this.props.authorizedUserId;if(!userId){// todo: may be replace push with Redirect??\nthis.props.history.push(\"/login\");}}if(!userId){console.error(\"ID should exists in URI params or in state ('authorizedUserId')\");}else{this.props.getUserProfile(userId);this.props.getStatus(userId);}}},{key:\"componentDidMount\",value:function componentDidMount(){this.refreshProfile();}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){if(this.props.match.params.userId!=prevProps.match.params.userId){this.refreshProfile();}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(Profile,_objectSpread(_objectSpread({},this.props),{},{isOwner:!this.props.match.params.userId,profile:this.props.profile,status:this.props.status,updateStatus:this.props.updateStatus,savePhoto:this.props.savePhoto}));}}]);return ProfileContainer;}(React.Component);var mapStateToProps=function mapStateToProps(state){//console.log('mapStateToProps PROFILE')\nreturn{profile:state.profilePage.profile,status:state.profilePage.status,authorizedUserId:state.auth.userId,isAuth:state.auth.isAuth};};export default compose(connect(mapStateToProps,{getUserProfile:getUserProfile,getStatus:getStatus,updateStatus:updateStatus,savePhoto:savePhoto,saveProfile:saveProfile}),withRouter)(ProfileContainer);","map":{"version":3,"sources":["D:/REact/01_first/interview/src/components/Profile/ProfileContainer.tsx"],"names":["React","Profile","connect","getStatus","getUserProfile","savePhoto","saveProfile","updateStatus","withRouter","compose","ProfileContainer","props","userId","match","params","authorizedUserId","history","push","console","error","refreshProfile","prevProps","prevState","profile","status","Component","mapStateToProps","state","profilePage","auth","isAuth"],"mappings":"qhBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,SAAR,CAAmBC,cAAnB,CAAmCC,SAAnC,CAA8CC,WAA9C,CAA2DC,YAA3D,KAA8E,6BAA9E,CACA,OAAQC,UAAR,KAA8C,kBAA9C,CACA,OAAQC,OAAR,KAAsB,OAAtB,C,8CAmBMC,CAAAA,gB,gIACF,0BAAYC,KAAZ,CAA8B,gEACpBA,KADoB,EAE7B,C,2DAED,yBAAiB,CACb,GAAIC,CAAAA,MAAqB,CAAG,CAAC,KAAKD,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBF,MAArD,CACA,GAAI,CAACA,MAAL,CAAa,CACTA,MAAM,CAAG,KAAKD,KAAL,CAAWI,gBAApB,CACA,GAAI,CAACH,MAAL,CAAa,CACT;AACA,KAAKD,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,EACH,CACJ,CAED,GAAI,CAACL,MAAL,CAAa,CACTM,OAAO,CAACC,KAAR,CAAc,iEAAd,EACH,CAFD,IAEO,CACH,KAAKR,KAAL,CAAWP,cAAX,CAA0BQ,MAA1B,EACA,KAAKD,KAAL,CAAWR,SAAX,CAAqBS,MAArB,EACH,CACJ,C,iCAED,4BAAoB,CAChB,KAAKQ,cAAL,GACH,C,kCAED,4BAAmBC,SAAnB,CAAyCC,SAAzC,CAA+D,CAC3D,GAAI,KAAKX,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBF,MAAxB,EAAkCS,SAAS,CAACR,KAAV,CAAgBC,MAAhB,CAAuBF,MAA7D,CAAqE,CACjE,KAAKQ,cAAL,GACH,CACJ,C,oCAED,+BAA6B,CAC5B,C,sBAED,iBAAS,CACL,mBACI,KAAC,OAAD,gCAAa,KAAKT,KAAlB,MACS,OAAO,CAAE,CAAC,KAAKA,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBF,MAD3C,CAES,OAAO,CAAE,KAAKD,KAAL,CAAWY,OAF7B,CAGS,MAAM,CAAE,KAAKZ,KAAL,CAAWa,MAH5B,CAIS,YAAY,CAAE,KAAKb,KAAL,CAAWJ,YAJlC,CAKS,SAAS,CAAE,KAAKI,KAAL,CAAWN,SAL/B,GADJ,CAQH,C,8BA7C0BL,KAAK,CAACyB,S,EAgDrC,GAAIC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAyB,CAC3C;AACA,MAAQ,CACJJ,OAAO,CAAEI,KAAK,CAACC,WAAN,CAAkBL,OADvB,CAEJC,MAAM,CAAEG,KAAK,CAACC,WAAN,CAAkBJ,MAFtB,CAGJT,gBAAgB,CAAEY,KAAK,CAACE,IAAN,CAAWjB,MAHzB,CAIJkB,MAAM,CAAEH,KAAK,CAACE,IAAN,CAAWC,MAJf,CAAR,CAMH,CARD,CAUA,cAAerB,CAAAA,OAAO,CAClBP,OAAO,CAACwB,eAAD,CAAkB,CAACtB,cAAc,CAAdA,cAAD,CAAiBD,SAAS,CAATA,SAAjB,CAA4BI,YAAY,CAAZA,YAA5B,CAA0CF,SAAS,CAATA,SAA1C,CAAqDC,WAAW,CAAXA,WAArD,CAAlB,CADW,CAElBE,UAFkB,CAAP,CAGbE,gBAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter, RouteComponentProps} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from '../../redux/redux-store';\r\nimport {ProfileType} from '../../Types/types';\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\ntype DispatchPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getStatus: (userId: number) => void\r\n    updateStatus: (status: string) => void\r\n    savePhoto: (file: File) => void\r\n    saveProfile: (profile: ProfileType) => Promise<any>\r\n}\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype PropsType = MapPropsType & DispatchPropsType & RouteComponentProps<PathParamsType>;\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    constructor(props: PropsType) {\r\n        super(props);\r\n    }\r\n\r\n    refreshProfile() {\r\n        let userId: number | null = +this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                // todo: may be replace push with Redirect??\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n\r\n        if (!userId) {\r\n            console.error(\"ID should exists in URI params or in state ('authorizedUserId')\");\r\n        } else {\r\n            this.props.getUserProfile(userId)\r\n            this.props.getStatus(userId)\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: PropsType, prevState: PropsType) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    //console.log('mapStateToProps PROFILE')\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    })\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}
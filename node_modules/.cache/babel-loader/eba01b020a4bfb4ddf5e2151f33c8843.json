{"ast":null,"code":"import{Field,Form,Formik}from'formik';import React from'react';import{useSelector}from'react-redux';import{getUsersFilter}from'../../redux/users-selectors';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var usersSearchFormValidate=function usersSearchFormValidate(values){var errors={};return errors;};export var UsersSearchForm=/*#__PURE__*/React.memo(function(props){var filter=useSelector(getUsersFilter);var submit=function submit(values,_ref){var setSubmitting=_ref.setSubmitting;var filter={term:values.term,friend:values.friend==='null'?null:values.friend==='true'?true:false};props.onFilterChanged(filter);setSubmitting(false);};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Formik,{enableReinitialize:true,initialValues:{term:filter.term,friend:String(filter.friend)},validate:usersSearchFormValidate,onSubmit:submit,children:function children(_ref2){var isSubmitting=_ref2.isSubmitting;return/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsx(Field,{type:\"text\",name:\"term\"}),/*#__PURE__*/_jsxs(Field,{name:\"friend\",as:\"select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"null\",children:\"All\"}),/*#__PURE__*/_jsx(\"option\",{value:\"true\",children:\"Only followed\"}),/*#__PURE__*/_jsx(\"option\",{value:\"false\",children:\"Only unfollowed\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isSubmitting,children:\"Find\"})]});}})});});","map":{"version":3,"sources":["D:/REact/01_first/interview/src/components/Users/UsersSearchForm.tsx"],"names":["Field","Form","Formik","React","useSelector","getUsersFilter","usersSearchFormValidate","values","errors","UsersSearchForm","memo","props","filter","submit","setSubmitting","term","friend","onFilterChanged","String","isSubmitting"],"mappings":"AAAA,OAAQA,KAAR,CAAeC,IAAf,CAAqBC,MAArB,KAAkC,QAAlC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,OAAQC,WAAR,KAA0B,aAA1B,CACA,OAAQC,cAAR,KAA6B,6BAA7B,C,wFAEA,GAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,MAAD,CAAiB,CAC7C,GAAMC,CAAAA,MAAM,CAAG,EAAf,CACA,MAAOA,CAAAA,MAAP,CACH,CAHD,CAgBA,MAAO,IAAMC,CAAAA,eAAoC,cAAGN,KAAK,CAACO,IAAN,CAAW,SAACC,KAAD,CAAW,CACtE,GAAMC,CAAAA,MAAM,CAAGR,WAAW,CAACC,cAAD,CAA1B,CACA,GAAMQ,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACN,MAAD,MAA2F,IAAvEO,CAAAA,aAAuE,MAAvEA,aAAuE,CACtG,GAAMF,CAAAA,MAAkB,CAAG,CACvBG,IAAI,CAAER,MAAM,CAACQ,IADU,CAEvBC,MAAM,CAAET,MAAM,CAACS,MAAP,GAAkB,MAAlB,CAA2B,IAA3B,CAAkCT,MAAM,CAACS,MAAP,GAAkB,MAAlB,CAA2B,IAA3B,CAAkC,KAFrD,CAA3B,CAKAL,KAAK,CAACM,eAAN,CAAsBL,MAAtB,EACAE,aAAa,CAAC,KAAD,CAAb,CACH,CARD,CAUA,mBAAO,kCACH,KAAC,MAAD,EACI,kBAAkB,KADtB,CAEI,aAAa,CAAE,CAACC,IAAI,CAAEH,MAAM,CAACG,IAAd,CAAoBC,MAAM,CAAEE,MAAM,CAACN,MAAM,CAACI,MAAR,CAAlC,CAFnB,CAGI,QAAQ,CAAEV,uBAHd,CAII,QAAQ,CAAEO,MAJd,UAMK,4BAAEM,CAAAA,YAAF,OAAEA,YAAF,oBACG,MAAC,IAAD,yBACI,KAAC,KAAD,EAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,MAAxB,EADJ,cAGI,MAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,EAAE,CAAC,QAAxB,wBACI,eAAQ,KAAK,CAAC,MAAd,iBADJ,cAEI,eAAQ,KAAK,CAAC,MAAd,2BAFJ,cAGI,eAAQ,KAAK,CAAC,OAAd,6BAHJ,GAHJ,cAQI,eAAQ,IAAI,CAAC,QAAb,CAAsB,QAAQ,CAAEA,YAAhC,kBARJ,GADH,EANL,EADG,EAAP,CAuBH,CAnCmD,CAA7C","sourcesContent":["import {Field, Form, Formik} from 'formik'\r\nimport React from 'react'\r\nimport {FilterType} from '../../redux/users-reducer'\r\nimport {useSelector} from 'react-redux'\r\nimport {getUsersFilter} from '../../redux/users-selectors'\r\n\r\nconst usersSearchFormValidate = (values: any) => {\r\n    const errors = {}\r\n    return errors\r\n}\r\n\r\ntype FriendFormType = 'true' | 'false' | 'null'\r\n\r\ntype FormType = {\r\n    term: string\r\n    friend: FriendFormType\r\n}\r\n\r\ntype PropsType = {\r\n    onFilterChanged: (filter: FilterType) => void\r\n}\r\n\r\nexport const UsersSearchForm: React.FC<PropsType> = React.memo((props) => {\r\n    const filter = useSelector(getUsersFilter)\r\n    const submit = (values: FormType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\r\n        const filter: FilterType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n        }\r\n\r\n        props.onFilterChanged(filter)\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return <div>\r\n        <Formik\r\n            enableReinitialize\r\n            initialValues={{term: filter.term, friend: String(filter.friend) as FriendFormType}}\r\n            validate={usersSearchFormValidate}\r\n            onSubmit={submit}\r\n        >\r\n            {({isSubmitting}) => (\r\n                <Form>\r\n                    <Field type=\"text\" name=\"term\"/>\r\n\r\n                    <Field name=\"friend\" as=\"select\">\r\n                        <option value=\"null\">All</option>\r\n                        <option value=\"true\">Only followed</option>\r\n                        <option value=\"false\">Only unfollowed</option>\r\n                    </Field>\r\n                    <button type=\"submit\" disabled={isSubmitting}>\r\n                        Find\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    </div>\r\n})\r\n"]},"metadata":{},"sourceType":"module"}
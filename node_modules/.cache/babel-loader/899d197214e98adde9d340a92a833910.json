{"ast":null,"code":"import _objectSpread from\"D:/REact/01_first/interview/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{getAuthUserData}from\"./auth-reducer\";var initialState={initialized:false,errorText:null};var appReducer=function appReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'INITIALIZED_SUCCESS':return _objectSpread(_objectSpread({},state),{},{initialized:true});case'ERROR_SUCCESS':return _objectSpread(_objectSpread({},state),{},{errorText:action.textError});default:return state;}};export var actions={initializedSuccess:function initializedSuccess(){return{type:'INITIALIZED_SUCCESS'};},errorSucces:function errorSucces(textError){return{type:'ERROR_SUCCESS',textError:textError};}};export var initializeApp=function initializeApp(){return function(dispatch){var promise=dispatch(getAuthUserData());Promise.all([promise]).then(function(){dispatch(actions.initializedSuccess());});};};export var error=function error(textError){return function(dispatch){dispatch(actions.errorSucces(textError));var SetError=function SetError(){return dispatch(actions.errorSucces(null));};setTimeout(SetError,2000);};};export default appReducer;","map":{"version":3,"sources":["D:/REact/01_first/interview/src/redux/app-reducer.ts"],"names":["getAuthUserData","initialState","initialized","errorText","appReducer","state","action","type","textError","actions","initializedSuccess","errorSucces","initializeApp","dispatch","promise","Promise","all","then","error","SetError","setTimeout"],"mappings":"6GACA,OAAQA,eAAR,KAA8B,gBAA9B,CAQA,GAAIC,CAAAA,YAAY,CAAE,CACdC,WAAW,CAAE,KADC,CAEdC,SAAS,CAAE,IAFG,CAAlB,CAOA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAgE,IAA/DC,CAAAA,KAA+D,2DAAvDJ,YAAuD,IAAzCK,CAAAA,MAAyC,2CAC/E,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,qBAAL,CACI,sCACOF,KADP,MAEIH,WAAW,CAAE,IAFjB,GAIJ,IAAK,eAAL,CACI,sCACOG,KADP,MAEIF,SAAS,CAACG,MAAM,CAACE,SAFrB,GAMJ,QACI,MAAOH,CAAAA,KAAP,CAdR,CAgBH,CAjBD,CAoBC,MAAO,IAAMI,CAAAA,OAAO,CAAG,CACnBC,kBAAkB,CAAC,oCAAO,CAACH,IAAI,CAAE,qBAAP,CAAP,EADA,CAEnBI,WAAW,CAAE,qBAACH,SAAD,QAAkB,CAACD,IAAI,CAAC,eAAN,CAAsBC,SAAS,CAATA,SAAtB,CAAlB,EAFM,CAAhB,CAUR,MAAO,IAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,SAAM,UAACC,QAAD,CAAkB,CACjD,GAAIC,CAAAA,OAAO,CAAGD,QAAQ,CAACb,eAAe,EAAhB,CAAtB,CACAe,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,EACKG,IADL,CACU,UAAM,CACRJ,QAAQ,CAACJ,OAAO,CAACC,kBAAR,EAAD,CAAR,CACH,CAHL,EAIH,CAN4B,EAAtB,CAQP,MAAO,IAAMQ,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACV,SAAD,QAAsB,UAACK,QAAD,CAAkB,CACzDA,QAAQ,CAACJ,OAAO,CAACE,WAAR,CAAoBH,SAApB,CAAD,CAAR,CACA,GAAMW,CAAAA,QAAQ,CAAE,QAAVA,CAAAA,QAAU,EAAI,CAAC,MAAON,CAAAA,QAAQ,CAACJ,OAAO,CAACE,WAAR,CAAoB,IAApB,CAAD,CAAf,CAA2C,CAAhE,CACAS,UAAU,CAACD,QAAD,CAAU,IAAV,CAAV,CAA0B,CAHT,EAAd,CAYP,cAAef,CAAAA,UAAf","sourcesContent":["\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\nimport {InferActionsTypes} from \"./redux-store\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet initialState= {\r\n    initialized: false,\r\n    errorText: null as string | null\r\n};\r\nexport type initialStateType =typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof  actions>\r\n\r\nconst appReducer = (state = initialState, action: ActionsType):initialStateType => {\r\n    switch (action.type) {\r\n        case 'INITIALIZED_SUCCESS':\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        case 'ERROR_SUCCESS':\r\n            return {\r\n                ...state,\r\n                errorText:action.textError\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n export const actions = {\r\n     initializedSuccess:() => ({type: 'INITIALIZED_SUCCESS'})as const,\r\n     errorSucces: (textError:any)=>({type:'ERROR_SUCCESS',textError}) as const\r\n }\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const initializeApp = () => (dispatch:any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(actions.initializedSuccess());\r\n        });\r\n}\r\n\r\nexport const error = (textError:string) => (dispatch:any) => {\r\n    dispatch(actions.errorSucces(textError))\r\n    const SetError =()=>{return dispatch(actions.errorSucces(null))}\r\n    setTimeout(SetError,2000)}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default appReducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}
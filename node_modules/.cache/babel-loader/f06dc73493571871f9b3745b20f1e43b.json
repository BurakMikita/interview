{"ast":null,"code":"import React from'react';import s from'./Dialogs.module.css';import DialogItem from\"./DialogItem/DialogItem\";import Message from\"./Message/Message\";import{Redirect}from\"react-router-dom\";import{useFormik}from\"formik\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Dialogs=function Dialogs(props){var state=props.dialogsPage;var dialogsElements=state.dialogs.map(function(d){return/*#__PURE__*/_jsx(DialogItem,{name:d.name,id:d.id},d.id);});var messagesElements=state.messages.map(function(m){return/*#__PURE__*/_jsx(Message,{message:m.message},m.id);});var onSendMessageClick=function onSendMessageClick(values){props.sendMessage(values);};return/*#__PURE__*/_jsxs(\"div\",{className:s.dialogs,children:[/*#__PURE__*/_jsx(\"div\",{className:s.dialogsItems,children:dialogsElements}),/*#__PURE__*/_jsxs(\"div\",{className:s.messages,children:[/*#__PURE__*/_jsx(\"div\",{children:messagesElements}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(AddMesege,{onSendMessageClick:onSendMessageClick})})]})]});};var AddMesege=function AddMesege(props){var initialValues={textarea:''};var onSubmit=function onSubmit(values){props.onSendMessageClick(formik.values.textarea);};var formik=useFormik({initialValues:initialValues,onSubmit:onSubmit});return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:formik.handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{value:formik.values.textarea,onChange:formik.handleChange,type:\"textarea\",name:\"textarea\",placeholder:\"textarea\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Send\"})})]})});};export default Dialogs;","map":{"version":3,"sources":["D:/REact/01_first/interview/src/components/Dialogs/Dialogs.jsx"],"names":["React","s","DialogItem","Message","Redirect","useFormik","Dialogs","props","state","dialogsPage","dialogsElements","dialogs","map","d","name","id","messagesElements","messages","m","message","onSendMessageClick","values","sendMessage","dialogsItems","AddMesege","initialValues","textarea","onSubmit","formik","handleSubmit","handleChange"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,CAAP,KAAc,sBAAd,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,mBAApB,CACA,OAAQC,QAAR,KAAuB,kBAAvB,CACA,OAAQC,SAAR,KAAwB,QAAxB,C,wFAIA,GAAMC,CAAAA,OAAO,CAAE,QAATA,CAAAA,OAAS,CAACC,KAAD,CAAW,CAEtB,GAAIC,CAAAA,KAAK,CAAGD,KAAK,CAACE,WAAlB,CAEA,GAAIC,CAAAA,eAAe,CAAGF,KAAK,CAACG,OAAN,CAAcC,GAAd,CAAmB,SAAAC,CAAC,qBAAI,KAAC,UAAD,EAAY,IAAI,CAAEA,CAAC,CAACC,IAApB,CAAqC,EAAE,CAAED,CAAC,CAACE,EAA3C,EAA+BF,CAAC,CAACE,EAAjC,CAAJ,EAApB,CAAtB,CACA,GAAIC,CAAAA,gBAAgB,CAAGR,KAAK,CAACS,QAAN,CAAeL,GAAf,CAAoB,SAAAM,CAAC,qBAAI,KAAC,OAAD,EAAS,OAAO,CAAEA,CAAC,CAACC,OAApB,EAAkCD,CAAC,CAACH,EAApC,CAAJ,EAArB,CAAvB,CAGA,GAAIK,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,MAAD,CAAY,CACjCd,KAAK,CAACe,WAAN,CAAkBD,MAAlB,EACH,CAFD,CAOA,mBACI,aAAK,SAAS,CAAEpB,CAAC,CAACU,OAAlB,wBACI,YAAK,SAAS,CAAEV,CAAC,CAACsB,YAAlB,UACMb,eADN,EADJ,cAII,aAAK,SAAS,CAAET,CAAC,CAACgB,QAAlB,wBACI,qBAAOD,gBAAP,EADJ,cAEI,kCACI,KAAC,SAAD,EAAW,kBAAkB,CAAEI,kBAA/B,EADJ,EAFJ,GAJJ,GADJ,CAaH,CA5BD,CAgCA,GAAMI,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACjB,KAAD,CAAW,CAEzB,GAAMkB,CAAAA,aAAa,CAAG,CAClBC,QAAQ,CAAE,EADQ,CAAtB,CAIA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACN,MAAD,CAAY,CACzBd,KAAK,CAACa,kBAAN,CAAyBQ,MAAM,CAACP,MAAP,CAAcK,QAAvC,EACH,CAFD,CAIA,GAAME,CAAAA,MAAM,CAAGvB,SAAS,CAAC,CACrBoB,aAAa,CAAbA,aADqB,CAErBE,QAAQ,CAARA,QAFqB,CAAD,CAAxB,CAOA,mBAAO,kCACH,cAAM,QAAQ,CAAEC,MAAM,CAACC,YAAvB,wBACI,kCACI,cAAO,KAAK,CAAED,MAAM,CAACP,MAAP,CAAcK,QAA5B,CAAsC,QAAQ,CAAEE,MAAM,CAACE,YAAvD,CAAqE,IAAI,CAAG,UAA5E,CAAuF,IAAI,CAAC,UAA5F,CAAuG,WAAW,CAAC,UAAnH,EADJ,EADJ,cAII,kCACI,eAAQ,IAAI,CAAC,QAAb,kBADJ,EAJJ,GADG,EAAP,CAUH,CA3BD,CA6BA,cAAexB,CAAAA,OAAf","sourcesContent":["import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useFormik} from \"formik\";\r\n\r\n\r\n\r\nconst Dialogs= (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n\r\n\r\n    let onSendMessageClick = (values) => {\r\n        props.sendMessage(values);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n                <div>\r\n                    <AddMesege onSendMessageClick={onSendMessageClick}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst AddMesege = (props) => {\r\n\r\n    const initialValues = {\r\n        textarea: ''\r\n    }\r\n\r\n    const onSubmit = (values) => {\r\n        props.onSendMessageClick(formik.values.textarea)\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit\r\n    })\r\n\r\n\r\n\r\n    return <div>\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div>\r\n                <input value={formik.values.textarea} onChange={formik.handleChange} type = 'textarea' name='textarea' placeholder='textarea'/>\r\n            </div>\r\n            <div>\r\n                <button type='submit'>Send</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}
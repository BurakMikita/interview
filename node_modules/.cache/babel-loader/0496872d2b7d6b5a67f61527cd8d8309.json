{"ast":null,"code":"import{InjectedFormikProps,useFormik}from'formik';import React from'react';import{connect}from'react-redux';import{Redirect}from'react-router-dom';import{login}from'../../redux/auth-reducer';import{AppStateType}from\"../../redux/redux-store\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(props){var initialValues={email:'',password:'',rememberMe:false,captcha:''};var onSubmit=function onSubmit(values){props.login(formik.values.email,formik.values.password,formik.values.rememberMe,formik.values.captcha);};var formik=useFormik({initialValues:initialValues,onSubmit:onSubmit});if(props.isAuth){return/*#__PURE__*/_jsx(Redirect,{to:'/profile'});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"LOGIN\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:formik.handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{value:formik.values.email,onChange:formik.handleChange,type:\"email\",name:\"email\",placeholder:\"Email\"}),/*#__PURE__*/_jsx(\"label\",{children:\"login\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{value:formik.values.password,onChange:formik.handleChange,type:\"password\",name:\"password\",placeholder:\"Password\"}),/*#__PURE__*/_jsx(\"label\",{children:\"password\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{value:formik.values.rememberMe,onChange:formik.handleChange,name:\"rememberMe\",type:\"checkbox\"}),\"remember me\"]}),/*#__PURE__*/_jsx(\"img\",{src:props.captchaUrl}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{value:formik.values.captcha,onChange:formik.handleChange,name:\"captcha\",type:\"text\"}),\"captcha\"]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"})]})]})]});};var mapStateToProps=function mapStateToProps(state){return{isAuth:state.auth.isAuth,captchaUrl:state.auth.captchaUrl};};export default connect(mapStateToProps,{login:login})(Login);","map":{"version":3,"sources":["D:/REact/01_first/interview/src/components/Login/Login.jsx"],"names":["InjectedFormikProps","useFormik","React","connect","Redirect","login","AppStateType","Login","props","initialValues","email","password","rememberMe","captcha","onSubmit","values","formik","isAuth","handleSubmit","handleChange","captchaUrl","mapStateToProps","state","auth"],"mappings":"AAAA,OAAQA,mBAAR,CAA6BC,SAA7B,KAA6C,QAA7C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,OAASC,KAAT,KAAsB,0BAAtB,CACA,OAAQC,YAAR,KAA2B,yBAA3B,C,wFAIA,GAAMC,CAAAA,KAAK,CAAI,QAATA,CAAAA,KAAS,CAACC,KAAD,CAAW,CAEtB,GAAMC,CAAAA,aAAa,CAAG,CAClBC,KAAK,CAAE,EADW,CAElBC,QAAQ,CAAE,EAFQ,CAGlBC,UAAU,CAAE,KAHM,CAIlBC,OAAO,CAAE,EAJS,CAAtB,CAOA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,MAAM,CAAI,CACvBP,KAAK,CAACH,KAAN,CAAaW,MAAM,CAACD,MAAP,CAAcL,KAA3B,CAAkCM,MAAM,CAACD,MAAP,CAAcJ,QAAhD,CAA0DK,MAAM,CAACD,MAAP,CAAcH,UAAxE,CAAmFI,MAAM,CAACD,MAAP,CAAcF,OAAjG,EACH,CAFD,CAIA,GAAMG,CAAAA,MAAM,CAAGf,SAAS,CAAC,CACrBQ,aAAa,CAAbA,aADqB,CAErBK,QAAQ,CAARA,QAFqB,CAAD,CAAxB,CASA,GAAIN,KAAK,CAACS,MAAV,CAAkB,CACd,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAE,UAAd,EAAP,CACH,CAGD,mBAAO,oCACH,6BADG,cAEH,cAAM,QAAQ,CAAED,MAAM,CAACE,YAAvB,wBAII,oCACI,cAAO,KAAK,CAAEF,MAAM,CAACD,MAAP,CAAcL,KAA5B,CAAmC,QAAQ,CAAEM,MAAM,CAACG,YAApD,CAAkE,IAAI,CAAG,OAAzE,CAAiF,IAAI,CAAC,OAAtF,CAA8F,WAAW,CAAC,OAA1G,EADJ,cACuH,gCADvH,GAJJ,cAQI,oCACI,cAAO,KAAK,CAAEH,MAAM,CAACD,MAAP,CAAcJ,QAA5B,CAAsC,QAAQ,CAAEK,MAAM,CAACG,YAAvD,CAAqE,IAAI,CAAG,UAA5E,CAAuF,IAAI,CAAC,UAA5F,CAAuG,WAAW,CAAC,UAAnH,EADJ,cACmI,mCADnI,GARJ,cAWI,oCACI,cAAO,KAAK,CAAEH,MAAM,CAACD,MAAP,CAAcH,UAA5B,CAAwC,QAAQ,CAAEI,MAAM,CAACG,YAAzD,CAAuE,IAAI,CAAC,YAA5E,CAAyF,IAAI,CAAC,UAA9F,EADJ,iBAXJ,cAcI,YAAK,GAAG,CAAEX,KAAK,CAACY,UAAhB,EAdJ,cAeI,oCACI,oCACI,cAAO,KAAK,CAAEJ,MAAM,CAACD,MAAP,CAAcF,OAA5B,CAAqC,QAAQ,CAAEG,MAAM,CAACG,YAAtD,CAAoE,IAAI,CAAC,SAAzE,CAAmF,IAAI,CAAC,MAAxF,EADJ,aADJ,cAII,eAAQ,IAAI,CAAC,QAAb,mBAJJ,GAfJ,GAFG,GAAP,CAyBH,CApDD,CAsDA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAChCL,MAAM,CAAEK,KAAK,CAACC,IAAN,CAAWN,MADa,CAEhCG,UAAU,CAACE,KAAK,CAACC,IAAN,CAAWH,UAFU,CAAZ,EAAxB,CAKA,cAAejB,CAAAA,OAAO,CAACkB,eAAD,CAAkB,CAAChB,KAAK,CAALA,KAAD,CAAlB,CAAP,CAAkCE,KAAlC,CAAf","sourcesContent":["import {InjectedFormikProps, useFormik} from 'formik'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { login } from '../../redux/auth-reducer'\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\n\r\n\r\nconst Login  = (props) => {\r\n\r\n    const initialValues = {\r\n        email: '',\r\n        password: '',\r\n        rememberMe: false,\r\n        captcha: ''\r\n    }\r\n\r\n    const onSubmit = values => {\r\n        props.login (formik.values.email, formik.values.password, formik.values.rememberMe,formik.values.captcha)\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n\r\n    })\r\n\r\n\r\n\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'} />\r\n    }\r\n\r\n\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <form onSubmit={formik.handleSubmit}>\r\n\r\n\r\n\r\n            <div>\r\n                <input value={formik.values.email} onChange={formik.handleChange} type = 'email' name='email' placeholder='Email'/><label>login</label>\r\n\r\n            </div>\r\n            <div>\r\n                <input value={formik.values.password} onChange={formik.handleChange} type = 'password' name='password' placeholder='Password'/><label>password</label>\r\n            </div>\r\n            <div>\r\n                <input value={formik.values.rememberMe} onChange={formik.handleChange} name='rememberMe' type=\"checkbox\"/>remember me\r\n            </div>\r\n            <img src={props.captchaUrl}/>\r\n            <div>\r\n                <div>\r\n                    <input value={formik.values.captcha} onChange={formik.handleChange} name='captcha' type=\"text\"/>captcha\r\n                </div>\r\n                <button type='submit'>Login</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl:state.auth.captchaUrl\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)\r\n"]},"metadata":{},"sourceType":"module"}
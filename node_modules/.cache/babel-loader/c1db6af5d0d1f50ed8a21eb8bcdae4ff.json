{"ast":null,"code":"import{instance}from\"./api\";export var profileAPI={getProfile:function getProfile(userId){return instance.get(\"profile/\"+userId).then(function(res){return res.data;});},getStatus:function getStatus(userId){return instance.get(\"profile/status/\"+userId).then(function(res){return res.data;});},updateStatus:function updateStatus(status){return instance.put(\"profile/status\",{status:status}).then(function(res){return res.data;});},savePhoto:function savePhoto(photoFile){var formData=new FormData();formData.append(\"image\",photoFile);return instance.put(\"profile/photo\",formData,{headers:{'Content-Type':'multipart/form-data'}}).then(function(res){return res.data;});},saveProfile:function saveProfile(profile){return instance.put(\"profile\",profile).then(function(res){return res.data;});}};","map":{"version":3,"sources":["D:/REact/01_first/interview/src/api/profile-api.ts"],"names":["instance","profileAPI","getProfile","userId","get","then","res","data","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","headers","saveProfile","profile"],"mappings":"AACA,OAAQA,QAAR,KAAwC,OAAxC,CAMA,MAAO,IAAMC,CAAAA,UAAU,CAAG,CACtBC,UADsB,qBACXC,MADW,CACK,CACvB,MAAOH,CAAAA,QAAQ,CAACI,GAAT,CAA0B,WAAaD,MAAvC,EAA+CE,IAA/C,CAAoD,SAAAC,GAAG,QAAEA,CAAAA,GAAG,CAACC,IAAN,EAAvD,CAAP,CACH,CAHqB,CAItBC,SAJsB,oBAIZL,MAJY,CAII,CACtB,MAAOH,CAAAA,QAAQ,CAACI,GAAT,CAAqB,kBAAoBD,MAAzC,EAAiDE,IAAjD,CAAsD,SAAAC,GAAG,QAAEA,CAAAA,GAAG,CAACC,IAAN,EAAzD,CAAP,CACH,CANqB,CAOtBE,YAPsB,uBAOTC,MAPS,CAOO,CACzB,MAAOV,CAAAA,QAAQ,CAACW,GAAT,kBAAgD,CAACD,MAAM,CAAEA,MAAT,CAAhD,EAAkEL,IAAlE,CAAuE,SAAAC,GAAG,QAAEA,CAAAA,GAAG,CAACC,IAAN,EAA1E,CAAP,CACH,CATqB,CAUtBK,SAVsB,oBAUZC,SAVY,CAUI,CACtB,GAAMC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,QAAJ,EAAjB,CACAD,QAAQ,CAACE,MAAT,CAAgB,OAAhB,CAAyBH,SAAzB,EACA,MAAOb,CAAAA,QAAQ,CAACW,GAAT,iBAA2EG,QAA3E,CAAqF,CACxFG,OAAO,CAAE,CACL,eAAgB,qBADX,CAD+E,CAArF,EAIJZ,IAJI,CAIC,SAAAC,GAAG,QAAEA,CAAAA,GAAG,CAACC,IAAN,EAJJ,CAAP,CAKH,CAlBqB,CAmBtBW,WAnBsB,sBAmBVC,OAnBU,CAmBY,CAC9B,MAAOnB,CAAAA,QAAQ,CAACW,GAAT,WAAyCQ,OAAzC,EAAkDd,IAAlD,CAAuD,SAAAC,GAAG,QAAEA,CAAAA,GAAG,CAACC,IAAN,EAA1D,CAAP,CACH,CArBqB,CAAnB","sourcesContent":["import {PhotosType, ProfileType} from \"../Types/types\";\r\nimport {instance, APIResponseType} from \"./api\";\r\n\r\ntype SavePhotosResponseDataType = {\r\n   photos: PhotosType\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get<ProfileType>(`profile/` + userId).then(res=>res.data);\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get<string>(`profile/status/` + userId).then(res=>res.data);\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<APIResponseType>(`profile/status`, {status: status}).then(res=>res.data);\r\n    },\r\n    savePhoto(photoFile: any) {\r\n        const formData = new FormData()\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put<APIResponseType<SavePhotosResponseDataType>>(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }).then(res=>res.data)\r\n    },\r\n    saveProfile(profile: ProfileType) {\r\n        return instance.put<APIResponseType>(`profile`, profile).then(res=>res.data);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
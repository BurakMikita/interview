{"ast":null,"code":"import _objectSpread from\"D:/REact/01_first/interview/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useEffect}from'react';import Paginator from'../common/Paginator/Paginator';import User from'./User';import{UsersSearchForm}from'./UsersSearchForm';import{requestUsers}from'../../redux/users-reducer';import{useDispatch,useSelector}from'react-redux';import{getCurrentPage,getFollowingInProgress,getPageSize,getTotalUsersCount,getUsers,getUsersFilter}from'../../redux/users-selectors';import{useHistory}from'react-router-dom';import*as queryString from'querystring';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Users=function Users(props){var users=useSelector(getUsers);var totalUsersCount=useSelector(getTotalUsersCount);var currentPage=useSelector(getCurrentPage);var pageSize=useSelector(getPageSize);var filter=useSelector(getUsersFilter);var followingInProgress=useSelector(getFollowingInProgress);var dispatch=useDispatch();var history=useHistory();useEffect(function(){var parsed=queryString.parse(history.location.search.substr(1));var actualPage=currentPage;var actualFilter=filter;if(!!parsed.page)actualPage=Number(parsed.page);if(!!parsed.term)actualFilter=_objectSpread(_objectSpread({},actualFilter),{},{term:parsed.term});switch(parsed.friend){case\"null\":actualFilter=_objectSpread(_objectSpread({},actualFilter),{},{friend:null});break;case\"true\":actualFilter=_objectSpread(_objectSpread({},actualFilter),{},{friend:true});break;case\"false\":actualFilter=_objectSpread(_objectSpread({},actualFilter),{},{friend:false});break;}dispatch(requestUsers(actualPage,pageSize,actualFilter));},[]);useEffect(function(){var query={};if(!!filter.term)query.term=filter.term;if(filter.friend!==null)query.friend=String(filter.friend);if(currentPage!==1)query.page=String(currentPage);history.push({pathname:'/users',search:queryString.stringify(query)});},[filter,currentPage]);var onPageChanged=function onPageChanged(pageNumber){dispatch(requestUsers(pageNumber,pageSize,filter));};var onFilterChanged=function onFilterChanged(filter){dispatch(requestUsers(1,pageSize,filter));};var follow=function follow(userId){dispatch(follow(userId));};var unfollow=function unfollow(userId){dispatch(unfollow(userId));};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(UsersSearchForm,{onFilterChanged:onFilterChanged}),/*#__PURE__*/_jsx(Paginator,{currentPage:currentPage,onPageChanged:onPageChanged,totalItemsCount:totalUsersCount,pageSize:pageSize}),/*#__PURE__*/_jsx(\"div\",{children:users.map(function(u){return/*#__PURE__*/_jsx(User,{user:u,followingInProgress:followingInProgress,unfollow:unfollow,follow:follow},u.id);})})]});};","map":{"version":3,"sources":["D:/REact/01_first/interview/src/components/Users/Users.tsx"],"names":["React","useEffect","Paginator","User","UsersSearchForm","requestUsers","useDispatch","useSelector","getCurrentPage","getFollowingInProgress","getPageSize","getTotalUsersCount","getUsers","getUsersFilter","useHistory","queryString","Users","props","users","totalUsersCount","currentPage","pageSize","filter","followingInProgress","dispatch","history","parsed","parse","location","search","substr","actualPage","actualFilter","page","Number","term","friend","query","String","push","pathname","stringify","onPageChanged","pageNumber","onFilterChanged","follow","userId","unfollow","map","u","id"],"mappings":"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","sourcesContent":["import React, {FC, useEffect} from 'react'\r\nimport Paginator from '../common/Paginator/Paginator'\r\nimport User from './User'\r\nimport {UsersSearchForm} from './UsersSearchForm'\r\nimport {FilterType, requestUsers} from '../../redux/users-reducer'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from '../../redux/users-selectors'\r\nimport {useHistory} from 'react-router-dom'\r\nimport * as queryString from 'querystring'\r\n\r\ntype PropsType = {}\r\n\r\ntype QueryParamsType = { term?: string; page?: string; friend?: string }\r\nexport const Users: FC<PropsType> = (props) => {\r\n\r\n    const users = useSelector(getUsers)\r\n    const totalUsersCount = useSelector(getTotalUsersCount)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const pageSize = useSelector(getPageSize)\r\n    const filter = useSelector(getUsersFilter)\r\n    const followingInProgress = useSelector(getFollowingInProgress)\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        const parsed = queryString.parse(history.location.search.substr(1)) as QueryParamsType\r\n\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n\r\n        if (!!parsed.page) actualPage = Number(parsed.page)\r\n\r\n\r\n        if (!!parsed.term) actualFilter = {...actualFilter, term: parsed.term as string}\r\n\r\n        switch(parsed.friend) {\r\n            case \"null\":\r\n                actualFilter = {...actualFilter, friend: null}\r\n                break;\r\n            case \"true\":\r\n                actualFilter = {...actualFilter, friend: true}\r\n                break;\r\n            case \"false\":\r\n                actualFilter = {...actualFilter, friend: false}\r\n                break;\r\n        }\r\n\r\n        dispatch(requestUsers(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const query: QueryParamsType = {}\r\n\r\n        if (!!filter.term) query.term = filter.term\r\n        if (filter.friend !== null) query.friend = String(filter.friend)\r\n        if (currentPage !== 1) query.page = String(currentPage)\r\n\r\n        history.push({\r\n            pathname: '/users',\r\n            search: queryString.stringify(query)\r\n        })\r\n    }, [filter, currentPage])\r\n\r\n\r\n    const onPageChanged = (pageNumber: number) => {\r\n        dispatch(requestUsers(pageNumber, pageSize, filter))\r\n    }\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(requestUsers(1, pageSize, filter))\r\n    }\r\n    const follow = (userId: number) => {\r\n        dispatch(follow(userId));\r\n    }\r\n    const unfollow = (userId: number) => {\r\n        dispatch(unfollow(userId));\r\n    }\r\n\r\n    return <div>\r\n\r\n        <UsersSearchForm onFilterChanged={onFilterChanged}/>\r\n\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={unfollow}\r\n                                     follow={follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
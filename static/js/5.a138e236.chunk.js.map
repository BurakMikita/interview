{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","AddMesege","formik","useFormik","initialValues","textarea","onSubmit","values","onSendMessageClick","handleSubmit","value","onChange","handleChange","type","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","sendMessage","mapStateToPropsForRedirect","isAuth","auth","compose","connect","actions","WrappedComponent","restProps"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,oGCiBnKC,EARyB,SAACC,GACrC,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACH,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCJnBC,EAJsB,SAACT,GAClC,OAAO,qBAAKG,UAAWC,IAAEC,OAAlB,SAA2BL,EAAMU,W,QCkCtCC,EAAY,SAACX,GAEf,IAQMY,EAASC,YAAU,CACrBC,cATkB,CAClBC,SAAU,IASVC,SANa,SAACC,GACdjB,EAAMkB,mBAAmBN,EAAOK,OAAOF,aAU3C,OAAO,8BACH,uBAAMC,SAAUJ,EAAOO,aAAvB,UACI,8BACI,uBAAOC,MAAOR,EAAOK,OAAOF,SAAUM,SAAUT,EAAOU,aAAcC,KAAO,WAAWf,KAAK,WAAWgB,YAAY,eAEvH,8BACI,wBAAQD,KAAK,SAAb,0BAMDE,EA7DA,SAACzB,GAEZ,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAkBF,EAAMG,QAAQC,KAAK,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYvB,KAAMuB,EAAEvB,KAAiBN,GAAI6B,EAAE7B,IAAZ6B,EAAE7B,OAC3E8B,EAAmBN,EAAMO,SAASH,KAAK,SAAAI,GAAC,OAAI,cAAC,EAAD,CAASxB,QAASwB,EAAExB,SAAcwB,EAAEhC,OAUpF,OACI,sBAAKC,UAAWC,IAAEyB,QAAlB,UACI,qBAAK1B,UAAWC,IAAE+B,aAAlB,SACMP,IAEN,sBAAKzB,UAAWC,IAAE6B,SAAlB,UACI,8BAAOD,IACP,8BACI,cAAC,EAAD,CAAWd,mBAfF,SAACD,GACtBjB,EAAMoC,YAAYnB,e,oCCbtBoB,EAA6B,SAACX,GAAD,MAA0B,CACvDY,OAAQZ,EAAMa,KAAKD,S,YCQRE,sBACXC,aAPkB,SAACf,GACnB,MAAO,CACHC,YAAaD,EAAMC,eAKhB,eAAsBe,ODA1B,SAA+BC,GAclC,OAJqCF,YACjCJ,EAA4B,GADKI,EARiC,SAACzC,GACnE,IAAKsC,EAAwBtC,EAAxBsC,OAAWM,EAAhB,YAA6B5C,EAA7B,GAEA,OAAKsC,EAEE,cAACK,EAAD,eAAsBC,IAFT,cAAC,IAAD,CAAUrC,GAAG,gBCN1BiC,CAGbf","file":"static/js/5.a138e236.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1C_Kk\",\"dialogsItems\":\"Dialogs_dialogsItems__11k1T\",\"active\":\"Dialogs_active__2cFIo\",\"messages\":\"Dialogs_messages__2gRsQ\",\"message\":\"Dialogs_message__V9J36\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype PropsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nconst DialogItem: React.FC<PropsType> = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\ntype PropsType = {\r\n    message: string\r\n}\r\nconst Message: React.FC<PropsType> = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useFormik} from \"formik\";\r\n\r\n\r\n\r\nconst Dialogs= (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n\r\n\r\n    let onSendMessageClick = (values) => {\r\n        props.sendMessage(values);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n                <div>\r\n                    <AddMesege onSendMessageClick={onSendMessageClick}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst AddMesege = (props) => {\r\n\r\n    const initialValues = {\r\n        textarea: ''\r\n    }\r\n\r\n    const onSubmit = (values) => {\r\n        props.onSendMessageClick(formik.values.textarea)\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit\r\n    })\r\n\r\n\r\n\r\n    return <div>\r\n        <form onSubmit={formik.handleSubmit}>\r\n            <div>\r\n                <input value={formik.values.textarea} onChange={formik.handleChange} type = 'textarea' name='textarea' placeholder='textarea'/>\r\n            </div>\r\n            <div>\r\n                <button type='submit'>Send</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from '../redux/redux-store';\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth\r\n} as MapPropsType);\r\n\r\ntype MapPropsType = {\r\n    isAuth: boolean\r\n}\r\ntype DispatchPropsType = {\r\n}\r\n\r\nexport function withAuthRedirect<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n\r\n    const RedirectComponent: React.FC<MapPropsType & DispatchPropsType> = (props) => {\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) return <Redirect to='/login'/>\r\n\r\n        return <WrappedComponent {...restProps as WCP}/>\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect<MapPropsType, DispatchPropsType, WCP, AppStateType>(\r\n        mapStateToPropsForRedirect, {})\r\n    (RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","import React from 'react';\r\nimport {actions} from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport {connect} from 'react-redux';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {compose} from 'redux';\r\nimport {AppStateType} from '../../redux/redux-store';\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {...actions}),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n"],"sourceRoot":""}